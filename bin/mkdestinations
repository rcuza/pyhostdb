#!/usr/bin/perl -w

use strict;

my ($left, $right, @sources, @dests);
my ($safe);
my (@srcitems, @remoteitems, @localitems, @diffitems, @syncupitems);
my (@reloadItemsLocal, @reloadItemsRemote);
my $cmd;
my $locale;
my (%seen, %reloads);

# History:
#  2005-09-26: Initial release
#  2005-09-27: Added "make syncup" and "make diff"
#
# Todo:
#	o  Add some way to specify what command to run to reload the BIND server.
#

# Turn a filepath into something that is safe to use as a filename.
# (A perl guru might be able to do this in one line.)
sub safename {
	my ($name) = @_;
	$_ = $name;

	# the ones that we're really worred about
    s/_/__/g;
    s/:/_C/g;
    s[/][_L]g;
    s/\\/_B/g;
    s/\./_P/g;

	# 0 thru 9 (shifted)
    s/!/_1/g;
    s/\@/_2/g;
    s/#/_3/g;
    s/\$/_4/g;
    s/%/_5/g;
    s/\^/_6/g;
    s/&/_7/g;
    s/\*/_8/g;
    s/\(/_9/g;
    s/\)/_0/g;

	# Others:
    s/\+/_a/g;
    s/`/_b/g;
    s/\]/_c/g;
    s/=/_e/g;
    s/>/_G/g;
    s/</_L/g;
    s/\[/_o/g;
    s/\|/_p/g;
    s/"/_Q/g;
    s/\?/_q/g;
    s/ /_s/g;
    s/;/_S/g;
    s/'/_T/g;
    s/~/_t/g;

	return $_;
}

print "\nall: push-local\n";

my $copycmd;
my $line;
my $junk;

while (defined($line = <>) ) {
	$line =~ s/#.*//;		# toss comments
	chomp $line;
	if ($line =~ s/\\\s*$//) {
		$line .= <>;
        	redo unless eof;
    	}

	$_ = $line;
	next if /^\s*$/;	# skip blank lines

	# Parse the line:
	if (/^\s*RELOAD/) {
		my ($host, $cmd) = m/^RELOAD\s+(\S+)\s+(.*)$/;
		($junk, $host) = split('@', $host) if m/@/; # user@host
		$reloads{ $host } = $cmd;
		next;
	}
	s/\s+/ /;		# unify whitespace
	($left, $right) = split( /\s+->\s*/, $_, 2 );
	#print "#LEFT=$left\n";
	#print "#RIGHT=$right\n";

	foreach my $src ( split( " ", $left) ) {

		print "\n#Copy SOURCE=$src\n";

		do {
			print "\n";
			print "MS/$src: $src\n";
			print "\t\@if [ ! -r MP/$src ] ; \\\n\tthen \\\n\t\techo CREATING MP/$src ; \\\n\t\tcp $src MP/$src ; \\\n\tfi\n";
			print "\t\@if [ ! -r MS/$src ] ; \\\n\tthen \\\n\t\techo CREATING MS/$src ; \\\n\t\tsed 's/:serial:/'\`cat serial\`'/g' <$src >MS/$src ; \\\n\tfi\n";
			print "\t\@if ! cmp $src MP/$src  > /dev/null ; \\\n\tthen \\\n\t\techo UPDATE MP/$src ; \\\n\t\tcp $src MP/$src ;\\\n\t\techo UPDATE MS/$src ;\\\n\t\tsed 's/:serial:/'\`cat serial\`'/g' <$src >MS/$src ; \\\n\tfi\n";
		} unless $seen{"MP/$src"}++;

		print "\n";
		print "diff-$src:\n";
		print "\tdiff \$(DIFFOPT) MP/$src $src\n";
		push @diffitems, "diff-$src";
		push @syncupitems, "MS/$src";

		foreach my $dst ( split( " ", $right) ) {
			$safe = safename($dst . "--" . $src);

			print "\n#Copy ...DEST=$dst ($safe)\n";

			do {

			if ($dst =~ /:/) {
				$copycmd = "scp";
				push @remoteitems, "DS/$safe";
			} else {
				$copycmd = "cp";
				push @localitems, "DS/$safe";
			}

				print "\n";
				print "DS/$safe: MS/$src\n";
				print "\t$copycmd MS/$src $dst\n";
				print "\t\@cp MS/$src DS/$safe\n";
			} unless $seen{"DS/$safe"}++;
		}
	}
}

print "\n";
print "syncup: @syncupitems\n\n";
print "diff: @diffitems\n\n";
print "push-all: push-local push-remote\n\n";
print "push-local: @srcitems @localitems\n\n";
print "push-remote: @srcitems @remoteitems\n\n";

# Handle all the reloads
foreach my $host ( keys %reloads ) {
	#$safe = safename("reload-" . $host);
	if ($host eq "local") {
		print "reload-$host:\n\t", $reloads{$host}, "\n\n";
		push @reloadItemsLocal, "reload-$host";
		
	} else {
		my $cmd = $reloads{$host};
		$cmd =~ s/'/\\'/g;
		print "reload-$host:\n\tssh $host '$cmd'\n\n";
		push @reloadItemsRemote, "reload-$host";
	}
}
print "reload-all: ";
	print "reload-local " if @reloadItemsLocal;
	print "reload-remote\n\n";
print "reload-remote: @reloadItemsRemote\n\n";

